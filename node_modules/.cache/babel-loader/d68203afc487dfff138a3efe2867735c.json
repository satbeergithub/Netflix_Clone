{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar WebSocketConnection_1 = require(\"../realtime/WebSocketConnection\");\nvar BrowserPollConnection_1 = require(\"../realtime/BrowserPollConnection\");\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\nexports.forceLongPolling = function () {\n  WebSocketConnection_1.WebSocketConnection.forceDisallow();\n  BrowserPollConnection_1.BrowserPollConnection.forceAllow();\n};\nexports.forceWebSockets = function () {\n  BrowserPollConnection_1.BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\nexports.isWebSocketsAvailable = function () {\n  return WebSocketConnection_1.WebSocketConnection['isAvailable']();\n};\nexports.setSecurityDebugCallback = function (ref, callback) {\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\nexports.stats = function (ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\nexports.statsIncrementCounter = function (ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\nexports.dataUpdateCount = function (ref) {\n  return ref.repo.dataUpdateCount;\n};\nexports.interceptServerData = function (ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAgBA;AACA;AAGA;;;;;;;AAQaA,wBAAgB,GAAG;EAC9BC,yCAAmB,CAACC,aAAa,EAAE;EACnCC,6CAAqB,CAACC,UAAU,EAAE;AACpC,CAAC;AAEYJ,uBAAe,GAAG;EAC7BG,6CAAqB,CAACD,aAAa,EAAE;AACvC,CAAC;AAED;AACaF,6BAAqB,GAAG;EACnC,OAAOC,yCAAmB,CAAC,aAAa,CAAC,EAAE;AAC7C,CAAC;AAEYD,gCAAwB,GAAG,UACtCK,GAAc,EACdC,QAA6B;EAE5BD,GAAG,CAACE,IAAI,CAACC,qBAA6B,CAACC,sBAAsB,GAAGH,QAAQ;AAC3E,CAAC;AAEYN,aAAK,GAAG,UAASK,GAAc,EAAEK,SAAmB;EAC/DL,GAAG,CAACE,IAAI,CAACI,KAAK,CAACD,SAAS,CAAC;AAC3B,CAAC;AAEYV,6BAAqB,GAAG,UAASK,GAAc,EAAEO,MAAc;EAC1EP,GAAG,CAACE,IAAI,CAACM,qBAAqB,CAACD,MAAM,CAAC;AACxC,CAAC;AAEYZ,uBAAe,GAAG,UAASK,GAAc;EACpD,OAAOA,GAAG,CAACE,IAAI,CAACO,eAAe;AACjC,CAAC;AAEYd,2BAAmB,GAAG,UACjCK,GAAc,EACdC,QAA8C;EAE9C,OAAOD,GAAG,CAACE,IAAI,CAACQ,oBAAoB,CAACT,QAAQ,CAAC;AAChD,CAAC","names":["exports","WebSocketConnection_1","forceDisallow","BrowserPollConnection_1","forceAllow","ref","callback","repo","persistentConnection_","securityDebugCallback_","showDelta","stats","metric","statsIncrementCounter","dataUpdateCount","interceptServerData_"],"sources":["../src/api/internal.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { Reference } from './Reference';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\n\nexport const forceLongPolling = function() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function() {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function(): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function(\n  ref: Reference,\n  callback: (a: Object) => void\n) {\n  (ref.repo.persistentConnection_ as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function(ref: Reference, showDelta?: boolean) {\n  ref.repo.stats(showDelta);\n};\n\nexport const statsIncrementCounter = function(ref: Reference, metric: string) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nexport const dataUpdateCount = function(ref: Reference): number {\n  return ref.repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function(\n  ref: Reference,\n  callback: ((a: string, b: any) => void) | null\n) {\n  return ref.repo.interceptServerData_(callback);\n};\n"]},"metadata":{},"sourceType":"script"}