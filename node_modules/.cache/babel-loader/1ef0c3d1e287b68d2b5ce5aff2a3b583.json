{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CacheNode_1 = require(\"./CacheNode\");\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\nvar NoCompleteChildSource_ = /** @class */function () {\n  function NoCompleteChildSource_() {}\n  /**\n   * @inheritDoc\n   */\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\n   * @inheritDoc\n   */\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n  return NoCompleteChildSource_;\n}();\nexports.NoCompleteChildSource_ = NoCompleteChildSource_;\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\nexports.NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nvar WriteTreeCompleteChildSource = /** @class */function () {\n  /**\n   * @param {!WriteTreeRef} writes_\n   * @param {!ViewCache} viewCache_\n   * @param {?Node} optCompleteServerCache_\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\n   * @inheritDoc\n   */\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode_1.CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n  return WriteTreeCompleteChildSource;\n}();\nexports.WriteTreeCompleteChildSource = WriteTreeCompleteChildSource;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAgBA;AAkCA;;;;;;;AAOA;EAAA,mCAkBA;EAjBE;;;EAGAA,iDAAgB,GAAhB,UAAiBC,QAAiB;IAChC,OAAO,IAAI;EACb,CAAC;EAED;;;EAGAD,mDAAkB,GAAlB,UACEE,KAAa,EACbC,KAAiB,EACjBC,OAAiB;IAEjB,OAAO,IAAI;EACb,CAAC;EACH,6BAAC;AAAD,CAlBA,EAkBC;AAlBYC;AAoBb;;;;;AAKaA,gCAAwB,GAAG,IAAIL,sBAAsB,EAAE;AAEpE;;;;;;;AAOA;EACE;;;;;EAKA,sCACUM,OAAqB,EACrBC,UAAqB,EACrBC,uBAA2C;IAA3C;MAAAA,8BAA2C;IAAA;IAF3C,YAAO,GAAPF,OAAO;IACP,eAAU,GAAVC,UAAU;IACV,4BAAuB,GAAvBC,uBAAuB;EAC9B;EAEH;;;EAGAC,uDAAgB,GAAhB,UAAiBR,QAAgB;IAC/B,IAAMS,IAAI,GAAG,IAAI,CAACH,UAAU,CAACI,aAAa,EAAE;IAC5C,IAAID,IAAI,CAACE,kBAAkB,CAACX,QAAQ,CAAC,EAAE;MACrC,OAAOS,IAAI,CAACG,OAAO,EAAE,CAACC,iBAAiB,CAACb,QAAQ,CAAC;IACnD,CAAC,MAAM;MACL,IAAMc,UAAU,GACd,IAAI,CAACP,uBAAuB,IAAI,IAAI,GAChC,IAAIQ,qBAAS,CAAC,IAAI,CAACR,uBAAuB,EAAE,IAAI,EAAE,KAAK,CAAC,GACxD,IAAI,CAACD,UAAU,CAACU,cAAc,EAAE;MACtC,OAAO,IAAI,CAACX,OAAO,CAACY,iBAAiB,CAACjB,QAAQ,EAAEc,UAAU,CAAC;IAC7D;EACF,CAAC;EAED;;;EAGAN,yDAAkB,GAAlB,UACEP,KAAY,EACZC,KAAgB,EAChBC,OAAgB;IAEhB,IAAMe,kBAAkB,GACtB,IAAI,CAACX,uBAAuB,IAAI,IAAI,GAChC,IAAI,CAACA,uBAAuB,GAC5B,IAAI,CAACD,UAAU,CAACa,qBAAqB,EAAE;IAC7C,IAAMC,KAAK,GAAG,IAAI,CAACf,OAAO,CAACgB,gBAAgB,CACzCH,kBAAkB,EAClBhB,KAAK,EACL,CAAC,EACDC,OAAO,EACPF,KAAK,CACN;IACD,IAAImB,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;MACtB,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAOF,KAAK,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EACH,mCAAC;AAAD,CArDA,EAqDC;AArDYhB","names":["NoCompleteChildSource_","childKey","index","child","reverse","exports","writes_","viewCache_","optCompleteServerCache_","WriteTreeCompleteChildSource","node","getEventCache","isCompleteForChild","getNode","getImmediateChild","serverNode","CacheNode_1","getServerCache","calcCompleteChild","completeServerData","getCompleteServerSnap","nodes","calcIndexedSlice","length"],"sources":["../src/core/view/CompleteChildSource.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './CacheNode';\nimport { NamedNode, Node } from '../snap/Node';\nimport { Index } from '../snap/indexes/Index';\nimport { WriteTreeRef } from '../WriteTree';\nimport { ViewCache } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  /**\n   * @param {!string} childKey\n   * @return {?Node}\n   */\n  getCompleteChild(childKey: string): Node | null;\n\n  /**\n   * @param {!Index} index\n   * @param {!NamedNode} child\n   * @param {boolean} reverse\n   * @return {?NamedNode}\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  /**\n   * @param {!WriteTreeRef} writes_\n   * @param {!ViewCache} viewCache_\n   * @param {?Node} optCompleteServerCache_\n   */\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.getEventCache();\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : this.viewCache_.getCompleteServerSnap();\n    const nodes = this.writes_.calcIndexedSlice(\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}