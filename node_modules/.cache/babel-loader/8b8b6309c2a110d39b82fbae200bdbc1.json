{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satbeer\\\\Desktop\\\\Netflix Clone\\\\src\\\\component\\\\homescreen\\\\Row.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\nfunction Row(_ref) {\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  // Options for react-youtube\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const handleClick = async movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      var _trailerurl$data$resu;\n      let trailerurl = await axios.get(`/movie/${movie.id}/videos?api_key=42f99a9f2b45a7ed2d417550cf0abb62`);\n      setTrailerUrl((_trailerurl$data$resu = trailerurl.data.results[0]) === null || _trailerurl$data$resu === void 0 ? void 0 : _trailerurl$data$resu.key);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, movies.map(movie => movie.backdrop_path !== null && /*#__PURE__*/React.createElement(\"img\", {\n    className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n    src: `${baseImgUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n    alt: movie.name,\n    key: movie.id,\n    onClick: () => handleClick(movie),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }))), trailerUrl && /*#__PURE__*/React.createElement(Youtube, {\n    videoId: trailerUrl,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }));\n}\nexport default Row;\n\n// import React, { useState } from 'react'\n// import { useEffect } from 'react'\n// import './Row.css'\n// import axios from 'axios'\n// function Row() {\n\n//   const [movies,setmovie]=useState([])\n\n// useEffect(()=>{\n//   async function fetchdata(){\n//     try{\n//       const res = await axios.get('https://api.themoviedb.org/3/trending/all/week?api_key=32ce6adcd8f4737faa4cf686afa6b000&language=en-US')\n//       console.log(res.data.results);\n//       let d=res.data.results\n//       setmovie(res.data.results)\n//     } catch(error){\n//       console.log(error)\n//     }  \n//   }\n//   fetchdata();\n// },[])\n\n//   return (\n//     <div className='row'>\n//       <h1>Trending Now</h1>\n\n//       <div className=\"row_posters\">\n//         {\n//           movies.map(movie=>{\n//             return <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"ri\" />\n//           })\n//         }\n\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Row\n\n// // // https://image.tmdb.org/t/p/original/\n// // poster_path","map":{"version":3,"names":["React","useState","useEffect","axios","Youtube","baseImgUrl","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","opts","height","width","playerVars","autoplay","fetchData","request","get","data","results","handleClick","movie","trailerurl","id","key","map","backdrop_path","poster_path","name"],"sources":["C:/Users/Satbeer/Desktop/Netflix Clone/src/component/homescreen/Row.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  // Options for react-youtube\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleClick = async (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      let trailerurl = await axios.get(\r\n        `/movie/${movie.id}/videos?api_key=42f99a9f2b45a7ed2d417550cf0abb62`\r\n      );\r\n      setTrailerUrl(trailerurl.data.results[0]?.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row_posters\">\r\n        {movies.map(\r\n          (movie) =>\r\n            movie.backdrop_path !== null && (\r\n              <img\r\n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                src={`${baseImgUrl}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n                key={movie.id}\r\n                onClick={() => handleClick(movie)}\r\n              />\r\n            )\r\n        )}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import { useEffect } from 'react'\r\n// import './Row.css'\r\n// import axios from 'axios'\r\n// function Row() {\r\n\r\n//   const [movies,setmovie]=useState([])\r\n\r\n// useEffect(()=>{\r\n//   async function fetchdata(){\r\n//     try{\r\n//       const res = await axios.get('https://api.themoviedb.org/3/trending/all/week?api_key=32ce6adcd8f4737faa4cf686afa6b000&language=en-US')\r\n//       console.log(res.data.results);\r\n//       let d=res.data.results\r\n//       setmovie(res.data.results)\r\n//     } catch(error){\r\n//       console.log(error)\r\n//     }  \r\n//   }\r\n//   fetchdata();\r\n// },[])\r\n \r\n//   return (\r\n//     <div className='row'>\r\n//       <h1>Trending Now</h1>\r\n      \r\n//       <div className=\"row_posters\">\r\n//         {\r\n//           movies.map(movie=>{\r\n//             return <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"ri\" />\r\n//           })\r\n//         }\r\n       \r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Row\r\n\r\n\r\n// // // https://image.tmdb.org/t/p/original/\r\n// // poster_path\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,eAAe;AAEnC,MAAMC,UAAU,GAAG,qCAAqC;AAExD,SAASC,GAAG,OAAkC;EAAA,IAAjC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAW,CAAC;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMa,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,eAAeiB,SAAS,GAAG;MACzB,MAAMC,OAAO,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAACb,QAAQ,CAAC;MACzCG,SAAS,CAACS,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAChB;IACAD,SAAS,EAAE;EACb,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,MAAMgB,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,IAAIb,UAAU,EAAE;MACdC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MAAA;MACL,IAAIa,UAAU,GAAG,MAAMvB,KAAK,CAACkB,GAAG,CAC7B,UAASI,KAAK,CAACE,EAAG,kDAAiD,CACrE;MACDd,aAAa,0BAACa,UAAU,CAACJ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,0DAA1B,sBAA4BK,GAAG,CAAC;IAChD;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKrB,KAAK,CAAM,eAEhB;IAAK,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzBG,MAAM,CAACmB,GAAG,CACRJ,KAAK,IACJA,KAAK,CAACK,aAAa,KAAK,IAAI,iBAC1B;IACE,SAAS,EAAG,cAAarB,UAAU,IAAI,iBAAkB,EAAE;IAC3D,GAAG,EAAG,GAAEJ,UAAW,GACjBI,UAAU,GAAGgB,KAAK,CAACM,WAAW,GAAGN,KAAK,CAACK,aACxC,EAAE;IACH,GAAG,EAAEL,KAAK,CAACO,IAAK;IAChB,GAAG,EAAEP,KAAK,CAACE,EAAG;IACd,OAAO,EAAE,MAAMH,WAAW,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAErC,CACJ,CACG,EACLb,UAAU,iBAAI,oBAAC,OAAO;IAAC,OAAO,EAAEA,UAAW;IAAC,IAAI,EAAEE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACvD;AAEV;AAEA,eAAeR,GAAG;;AAqClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA"},"metadata":{},"sourceType":"module"}