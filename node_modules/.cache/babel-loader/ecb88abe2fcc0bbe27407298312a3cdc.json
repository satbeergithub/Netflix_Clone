{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Method for invoking a callback asynchronously.\n */\nimport * as promiseimpl from './promise_external';\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nexport function async(f) {\n  return function () {\n    var argsToForward = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    }\n    promiseimpl.resolve(true).then(function () {\n      f.apply(null, argsToForward);\n    });\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;;;AAGA,OAAO,KAAKA,WAAW,MAAM,oBAAoB;AAEjD;;;;;AAKA,OAAM,eAAgBC,CAAW;EAC/B,OAAO;IAAS;SAAA,UAAuB,EAAvBC,qBAAuB,EAAvBA,IAAuB;MAAvBC;;IACdH,WAAW,CAACI,OAAO,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC;MAC7BJ,CAAC,CAACK,KAAK,CAAC,IAAI,EAAEH,aAAa,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC;AACH","names":["promiseimpl","f","_i","argsToForward","resolve","then","apply"],"sources":["../src/implementation/async.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Method for invoking a callback asynchronously.\n */\nimport * as promiseimpl from './promise_external';\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nexport function async(f: Function): Function {\n  return function(...argsToForward: any[]) {\n    promiseimpl.resolve(true).then(function() {\n      f.apply(null, argsToForward);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}