{"ast":null,"code":"/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef(p) {\n  return p != null;\n}\nexport function isJustDef(p) {\n  return p !== void 0;\n}\nexport function isFunction(p) {\n  return typeof p === 'function';\n}\nexport function isObject(p) {\n  return typeof p === 'object';\n}\nexport function isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\nexport function isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\nexport function isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\nexport function isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\nexport function isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\nexport function isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;;;AAGA,OAAM,eAAgBA,CAAM;EAC1B,OAAOA,CAAC,IAAI,IAAI;AAClB;AAEA,OAAM,mBAAoBA,CAAM;EAC9B,OAAOA,CAAC,KAAK,KAAK,CAAC;AACrB;AAEA,OAAM,oBAAqBA,CAAM;EAC/B,OAAO,OAAOA,CAAC,KAAK,UAAU;AAChC;AAEA,OAAM,kBAAmBA,CAAM;EAC7B,OAAO,OAAOA,CAAC,KAAK,QAAQ;AAC9B;AAEA,OAAM,yBAA0BA,CAAM;EACpC,OAAOC,QAAQ,CAACD,CAAC,CAAC,IAAIA,CAAC,KAAK,IAAI;AAClC;AAEA,OAAM,0BAA2BA,CAAM;EACrC,OAAOC,QAAQ,CAACD,CAAC,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC;AACzC;AAEA,OAAM,kBAAmBA,CAAM;EAC7B,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,YAAYI,MAAM;AACrD;AAEA,OAAM,kBAAmBJ,CAAM;EAC7B,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,YAAYK,MAAM;AACrD;AAEA,OAAM,sBAAuBL,CAAM;EACjC,OAAOM,mBAAmB,EAAE,IAAIN,CAAC,YAAYO,IAAI;AACnD;AAEA,OAAM;EACJ,OAAO,OAAOA,IAAI,KAAK,WAAW;AACpC","names":["p","isObject","Array","isArray","String","Number","isNativeBlobDefined","Blob"],"sources":["../src/implementation/type.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef(p: any): boolean {\n  return p != null;\n}\n\nexport function isJustDef(p: any): boolean {\n  return p !== void 0;\n}\n\nexport function isFunction(p: any): boolean {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: any): boolean {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: any): boolean {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: any): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: any): boolean {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNumber(p: any): boolean {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: any): boolean {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n"]},"metadata":{},"sourceType":"module"}