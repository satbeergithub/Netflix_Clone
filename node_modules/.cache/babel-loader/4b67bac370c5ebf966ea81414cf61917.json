{"ast":null,"code":"var UploadTaskSnapshot = /** @class */function () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n  Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\n    get: function get() {\n      if (this.metadata !== null) {\n        var urls = this.metadata['downloadURLs'];\n        if (urls != null && urls[0] != null) {\n          return urls[0];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return UploadTaskSnapshot;\n}();\nexport { UploadTaskSnapshot };","map":{"version":3,"mappings":"AAqBA;EACE,4BACWA,gBAAwB,EACxBC,UAAkB,EAClBC,KAAgB,EAChBC,QAAyB,EACzBC,IAAgB,EAChBC,GAAc;IALd,qBAAgB,GAAhBL,gBAAgB;IAChB,eAAU,GAAVC,UAAU;IACV,UAAK,GAALC,KAAK;IACL,aAAQ,GAARC,QAAQ;IACR,SAAI,GAAJC,IAAI;IACJ,QAAG,GAAHC,GAAG;EACX;EAEHC,sBAAIC,2CAAW;SAAf;MACE,IAAI,IAAI,CAACJ,QAAQ,KAAK,IAAI,EAAE;QAC1B,IAAIK,IAAI,GAAG,IAAI,CAACL,QAAQ,CAAC,cAAc,CAAC;QACxC,IAAIK,IAAI,IAAI,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;UACnC,OAAOA,IAAI,CAAC,CAAC,CAAC;QAChB,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF,CAAC;;;;EACH,yBAAC;AAAD,CAtBA,EAsBC","names":["bytesTransferred","totalBytes","state","metadata","task","ref","Object","UploadTaskSnapshot","urls"],"sources":["../src/tasksnapshot.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n\n  get downloadURL(): string | null {\n    if (this.metadata !== null) {\n      let urls = this.metadata['downloadURLs'];\n      if (urls != null && urls[0] != null) {\n        return urls[0];\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}