{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar obj_1 = require(\"./obj\");\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexports.querystring = function (querystringParams) {\n  var params = [];\n  obj_1.forEach(querystringParams, function (key, value) {\n    if (Array.isArray(value)) {\n      value.forEach(function (arrayVal) {\n        params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  });\n  return params.length ? '&' + params.join('&') : '';\n};\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexports.querystringDecode = function (querystring) {\n  var obj = {};\n  var tokens = querystring.replace(/^\\?/, '').split('&');\n  tokens.forEach(function (token) {\n    if (token) {\n      var key = token.split('=');\n      obj[key[0]] = key[1];\n    }\n  });\n  return obj;\n};","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAgBA;AAEA;;;;;;;;AAQaA,mBAAW,GAAG,UAASC,iBAAiB;EACnD,IAAIC,MAAM,GAAG,EAAE;EACfC,aAAO,CAACF,iBAAiB,EAAE,UAASG,GAAG,EAAEC,KAAK;IAC5C,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxBA,KAAK,CAACG,OAAO,CAAC,UAASC,QAAQ;QAC7BP,MAAM,CAACQ,IAAI,CACTC,kBAAkB,CAACP,GAAG,CAAC,GAAG,GAAG,GAAGO,kBAAkB,CAACF,QAAQ,CAAC,CAC7D;MACH,CAAC,CAAC;IACJ,CAAC,MAAM;MACLP,MAAM,CAACQ,IAAI,CAACC,kBAAkB,CAACP,GAAG,CAAC,GAAG,GAAG,GAAGO,kBAAkB,CAACN,KAAK,CAAC,CAAC;IACxE;EACF,CAAC,CAAC;EACF,OAAOH,MAAM,CAACU,MAAM,GAAG,GAAG,GAAGV,MAAM,CAACW,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;AACpD,CAAC;AAED;;;;;;AAMab,yBAAiB,GAAG,UAASc,WAAW;EACnD,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,MAAM,GAAGF,WAAW,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAEtDF,MAAM,CAACR,OAAO,CAAC,UAASW,KAAK;IAC3B,IAAIA,KAAK,EAAE;MACT,IAAIf,GAAG,GAAGe,KAAK,CAACD,KAAK,CAAC,GAAG,CAAC;MAC1BH,GAAG,CAACX,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,CAAC;EACF,OAAOW,GAAG;AACZ,CAAC","names":["exports","querystringParams","params","obj_1","key","value","Array","isArray","forEach","arrayVal","push","encodeURIComponent","length","join","querystring","obj","tokens","replace","split","token"],"sources":["../src/query.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { forEach } from './obj';\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexport const querystring = function(querystringParams) {\n  var params = [];\n  forEach(querystringParams, function(key, value) {\n    if (Array.isArray(value)) {\n      value.forEach(function(arrayVal) {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  });\n  return params.length ? '&' + params.join('&') : '';\n};\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexport const querystringDecode = function(querystring) {\n  var obj = {};\n  var tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(function(token) {\n    if (token) {\n      var key = token.split('=');\n      obj[key[0]] = key[1];\n    }\n  });\n  return obj;\n};\n"]},"metadata":{},"sourceType":"script"}