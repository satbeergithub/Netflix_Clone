{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../../util/util\");\nvar Index_1 = require(\"./Index\");\nvar ChildrenNode_1 = require(\"../ChildrenNode\");\nvar Node_1 = require(\"../Node\");\nvar nodeFromJSON_1 = require(\"../nodeFromJSON\");\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nvar PathIndex = /** @class */function (_super) {\n  __extends(PathIndex, _super);\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n    _this.indexPath_ = indexPath_;\n    util_1.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\n   * @param {!Node} snap\n   * @return {!Node}\n   * @protected\n   */\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\n   * @inheritDoc\n   */\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\n   * @inheritDoc\n   */\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return util_2.nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n    var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new Node_1.NamedNode(name, node);\n  };\n  /**\n   * @inheritDoc\n   */\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, ChildrenNode_1.MAX_NODE);\n    return new Node_1.NamedNode(util_2.MAX_NAME, node);\n  };\n  /**\n   * @inheritDoc\n   */\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n  return PathIndex;\n}(Index_1.Index);\nexports.PathIndex = PathIndex;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;AAKA;EAA+BA;EAC7B,mBAAoBC,UAAgB;IAApC,YACEC,iBAAO;IADWC,gBAAU,GAAVF,UAAU;IAG5BG,aAAM,CACJ,CAACH,UAAU,CAACI,OAAO,EAAE,IAAIJ,UAAU,CAACK,QAAQ,EAAE,KAAK,WAAW,EAC9D,yDAAyD,CAC1D;;EACH;EAEA;;;;;EAKUC,gCAAY,GAAtB,UAAuBC,IAAU;IAC/B,OAAOA,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACR,UAAU,CAAC;EACvC,CAAC;EAED;;;EAGAM,+BAAW,GAAX,UAAYG,IAAU;IACpB,OAAO,CAACA,IAAI,CAACD,QAAQ,CAAC,IAAI,CAACR,UAAU,CAAC,CAACI,OAAO,EAAE;EAClD,CAAC;EAED;;;EAGAE,2BAAO,GAAP,UAAQI,CAAY,EAAEC,CAAY;IAChC,IAAMC,MAAM,GAAG,IAAI,CAACC,YAAY,CAACH,CAAC,CAACD,IAAI,CAAC;IACxC,IAAMK,MAAM,GAAG,IAAI,CAACD,YAAY,CAACF,CAAC,CAACF,IAAI,CAAC;IACxC,IAAMM,QAAQ,GAAGH,MAAM,CAACI,SAAS,CAACF,MAAM,CAAC;IACzC,IAAIC,QAAQ,KAAK,CAAC,EAAE;MAClB,OAAOE,kBAAW,CAACP,CAAC,CAACQ,IAAI,EAAEP,CAAC,CAACO,IAAI,CAAC;IACpC,CAAC,MAAM;MACL,OAAOH,QAAQ;IACjB;EACF,CAAC;EAED;;;EAGAT,4BAAQ,GAAR,UAASa,UAAkB,EAAED,IAAY;IACvC,IAAME,SAAS,GAAGC,2BAAY,CAACF,UAAU,CAAC;IAC1C,IAAMV,IAAI,GAAGa,2BAAY,CAACC,UAAU,CAACC,WAAW,CAC9C,IAAI,CAACxB,UAAU,EACfoB,SAAS,CACV;IACD,OAAO,IAAIK,gBAAS,CAACP,IAAI,EAAET,IAAI,CAAC;EAClC,CAAC;EAED;;;EAGAH,2BAAO,GAAP;IACE,IAAMG,IAAI,GAAGa,2BAAY,CAACC,UAAU,CAACC,WAAW,CAAC,IAAI,CAACxB,UAAU,EAAEsB,uBAAQ,CAAC;IAC3E,OAAO,IAAIG,gBAAS,CAACR,eAAQ,EAAER,IAAI,CAAC;EACtC,CAAC;EAED;;;EAGAH,4BAAQ,GAAR;IACE,OAAO,IAAI,CAACN,UAAU,CAAC0B,KAAK,EAAE,CAACC,IAAI,CAAC,GAAG,CAAC;EAC1C,CAAC;EACH,gBAAC;AAAD,CAlEA,CAA+BC,aAAK;AAAvBC","names":["__extends","indexPath_","_super","_this","util_1","isEmpty","getFront","PathIndex","snap","getChild","node","a","b","aChild","extractChild","bChild","indexCmp","compareTo","util_2","name","indexValue","valueNode","nodeFromJSON_1","ChildrenNode_1","EMPTY_NODE","updateChild","Node_1","slice","join","Index_1","exports"],"sources":["../src/core/snap/indexes/PathIndex.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { Index } from './Index';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\nimport { Path } from '../../util/Path';\n\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !indexPath_.isEmpty() && indexPath_.getFront() !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  /**\n   * @param {!Node} snap\n   * @return {!Node}\n   * @protected\n   */\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.indexPath_.slice().join('/');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}