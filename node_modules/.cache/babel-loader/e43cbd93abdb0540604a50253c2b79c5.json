{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar util_6 = require(\"@firebase/util\");\nvar storage_1 = require(\"../storage/storage\");\nvar util_7 = require(\"@firebase/util\");\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexports.LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexports.sha1 = function (str) {\n  var utf8Bytes = util_5.stringToByteArray(str);\n  var sha1 = new util_4.Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return util_3.base64.encodeByteArray(sha1Bytes);\n};\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nvar buildLogMessage_ = function buildLogMessage_() {\n  var var_args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n  var message = '';\n  for (var i = 0; i < var_args.length; i++) {\n    if (Array.isArray(var_args[i]) || var_args[i] && typeof var_args[i] === 'object' && typeof var_args[i].length === 'number') {\n      message += buildLogMessage_.apply(null, var_args[i]);\n    } else if (typeof var_args[i] === 'object') {\n      message += util_6.stringify(var_args[i]);\n    } else {\n      message += var_args[i];\n    }\n    message += ' ';\n  }\n  return message;\n};\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexports.logger = null;\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nvar firstLog_ = true;\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexports.enableLogging = function (logger_, persistent) {\n  util_1.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n  if (logger_ === true) {\n    if (typeof console !== 'undefined') {\n      if (typeof console.log === 'function') {\n        exports.logger = console.log.bind(console);\n      } else if (typeof console.log === 'object') {\n        // IE does this.\n        exports.logger = function (message) {\n          console.log(message);\n        };\n      }\n    }\n    if (persistent) storage_1.SessionStorage.set('logging_enabled', true);\n  } else if (typeof logger_ === 'function') {\n    exports.logger = logger_;\n  } else {\n    exports.logger = null;\n    storage_1.SessionStorage.remove('logging_enabled');\n  }\n};\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexports.log = function () {\n  var var_args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (exports.logger === null && storage_1.SessionStorage.get('logging_enabled') === true) exports.enableLogging(true);\n  }\n  if (exports.logger) {\n    var message = buildLogMessage_.apply(null, var_args);\n    exports.logger(message);\n  }\n};\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexports.logWrapper = function (prefix) {\n  return function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      var_args[_i] = arguments[_i];\n    }\n    exports.log.apply(void 0, [prefix].concat(var_args));\n  };\n};\n/**\n * @param {...string} var_args\n */\nexports.error = function () {\n  var var_args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n  if (typeof console !== 'undefined') {\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\n    if (typeof console.error !== 'undefined') {\n      console.error(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n/**\n * @param {...string} var_args\n */\nexports.fatal = function () {\n  var var_args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n  var message = buildLogMessage_.apply(void 0, var_args);\n  throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n/**\n * @param {...*} var_args\n */\nexports.warn = function () {\n  var var_args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n  if (typeof console !== 'undefined') {\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\n    if (typeof console.warn !== 'undefined') {\n      console.warn(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexports.warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    exports.warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\n * @param {!String} methodName\n */\nexports.warnAboutUnsupportedMethod = function (methodName) {\n  exports.warn(methodName + ' is unsupported and will likely change soon.  ' + 'Please do not use.');\n};\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexports.isInvalidJSONNumber = function (data) {\n  return typeof data === 'number' && (data != data ||\n  // NaN\n  data == Number.POSITIVE_INFINITY || data == Number.NEGATIVE_INFINITY);\n};\n/**\n * @param {function()} fn\n */\nexports.executeWhenDOMReady = function (fn) {\n  if (util_7.isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn_1, false);\n    } else if (document.attachEvent) {\n      // IE.\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') wrappedFn_1();\n      });\n      // fallback to onload.\n      window.attachEvent('onload', wrappedFn_1);\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexports.MIN_NAME = '[MIN_NAME]';\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexports.MAX_NAME = '[MAX_NAME]';\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexports.nameCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === exports.MIN_NAME || b === exports.MAX_NAME) {\n    return -1;\n  } else if (b === exports.MIN_NAME || a === exports.MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = exports.tryParseInt(a),\n      bAsInt = exports.tryParseInt(b);\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexports.stringCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexports.requireKey = function (key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + util_6.stringify(obj));\n  }\n};\n/**\n * @param {*} obj\n * @return {string}\n */\nexports.ObjectToUniqueKey = function (obj) {\n  if (typeof obj !== 'object' || obj === null) return util_6.stringify(obj);\n  var keys = [];\n  for (var k in obj) {\n    keys.push(k);\n  }\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  var key = '{';\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) key += ',';\n    key += util_6.stringify(keys[i]);\n    key += ':';\n    key += exports.ObjectToUniqueKey(obj[keys[i]]);\n  }\n  key += '}';\n  return key;\n};\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexports.splitStringBySize = function (str, segsize) {\n  var len = str.length;\n  if (len <= segsize) {\n    return [str];\n  }\n  var dataSegs = [];\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexports.each = function (obj, fn) {\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; ++i) {\n      fn(i, obj[i]);\n    }\n  } else {\n    /**\n     * in the conversion of code we removed the goog.object.forEach\n     * function which did a value,key callback. We standardized on\n     * a single impl that does a key, value callback. So we invert\n     * to not have to touch the `each` code points\n     */\n    util_2.forEach(obj, function (key, val) {\n      return fn(val, key);\n    });\n  }\n};\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexports.bindCallback = function (callback, context) {\n  return context ? callback.bind(context) : callback;\n};\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexports.doubleToIEEE754String = function (v) {\n  util_1.assert(!exports.isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n  var ebits = 11,\n    fbits = 52;\n  var bias = (1 << ebits - 1) - 1,\n    s,\n    e,\n    f,\n    ln,\n    i,\n    bits,\n    str;\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n  // Pack sign, exponent, fraction\n  bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join('');\n  // Return the data as a hex string. --MJL\n  var hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) hexByte = '0' + hexByte;\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexports.isChromeExtensionContentScript = function () {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexports.isWindowsStoreApp = function () {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexports.errorForServerCode = function (code, query) {\n  var reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code == 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code == 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexports.INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexports.tryParseInt = function (str) {\n  if (exports.INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n  return null;\n};\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexports.exceptionGuard = function (fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      exports.warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexports.callUserCallback = function (callback) {\n  var var_args = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    var_args[_i - 1] = arguments[_i];\n  }\n  if (typeof callback === 'function') {\n    exports.exceptionGuard(function () {\n      callback.apply(void 0, var_args);\n    });\n  }\n};\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexports.beingCrawled = function () {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || '';\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexports.exportPropGetter = function (object, name, fnGet) {\n  Object.defineProperty(object, name, {\n    get: fnGet\n  });\n};\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexports.setTimeoutNonBlocking = function (fn, time) {\n  var timeout = setTimeout(fn, time);\n  if (typeof timeout === 'object' && timeout['unref']) {\n    timeout['unref']();\n  }\n  return timeout;\n};","map":{"version":3,"mappings":"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","names":["exports","id","str","utf8Bytes","util_5","sha1","util_4","update","sha1Bytes","digest","util_3","encodeByteArray","buildLogMessage_","_i","var_args","message","i","length","Array","isArray","apply","util_6","firstLog_","logger_","persistent","util_1","console","log","bind","storage_1","set","remove","get","prefix","error","Error","warn","window","location","protocol","indexOf","methodName","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","fn","util_7","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","a","b","aAsInt","bAsInt","key","obj","keys","k","push","sort","segsize","len","dataSegs","c","substring","util_2","val","callback","context","v","ebits","fbits","bias","s","e","f","ln","bits","Infinity","abs","pow","min","LN2","round","reverse","join","hexByteString","hexByte","parseInt","substr","toString","toLowerCase","test","href","Windows","UI","code","query","reason","path","toUpperCase","RegExp","intVal","stack","userAgent","search","object","name","fnGet","Object","defineProperty","time","timeout"],"sources":["../src/core/util/util.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../../api/Query';\n\ndeclare const window: any;\ndeclare const Windows: any;\n\nimport { assert } from '@firebase/util';\nimport { forEach } from '@firebase/util';\nimport { base64 } from '@firebase/util';\nimport { Sha1 } from '@firebase/util';\nimport { stringToByteArray } from '@firebase/util';\nimport { stringify } from '@firebase/util';\nimport { SessionStorage } from '../storage/storage';\nimport { isNodeSdk } from '@firebase/util';\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexport const LUIDGenerator: (() => number) = (function() {\n  let id = 1;\n  return function() {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexport const sha1 = function(str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nconst buildLogMessage_ = function(...var_args: any[]): string {\n  let message = '';\n  for (let i = 0; i < var_args.length; i++) {\n    if (\n      Array.isArray(var_args[i]) ||\n      (var_args[i] &&\n        typeof var_args[i] === 'object' &&\n        typeof var_args[i].length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, var_args[i]);\n    } else if (typeof var_args[i] === 'object') {\n      message += stringify(var_args[i]);\n    } else {\n      message += var_args[i];\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function(\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || (logger_ === true || logger_ === false),\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    if (typeof console !== 'undefined') {\n      if (typeof console.log === 'function') {\n        logger = console.log.bind(console);\n      } else if (typeof console.log === 'object') {\n        // IE does this.\n        logger = function(message) {\n          console.log(message);\n        };\n      }\n    }\n    if (persistent) SessionStorage.set('logging_enabled', true);\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexport const log = function(...var_args: string[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true)\n      enableLogging(true);\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, var_args);\n    logger(message);\n  }\n};\n\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexport const logWrapper = function(\n  prefix: string\n): (...var_args: any[]) => void {\n  return function(...var_args: any[]) {\n    log(prefix, ...var_args);\n  };\n};\n\n/**\n * @param {...string} var_args\n */\nexport const error = function(...var_args: string[]) {\n  if (typeof console !== 'undefined') {\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...var_args);\n    if (typeof console.error !== 'undefined') {\n      console.error(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n\n/**\n * @param {...string} var_args\n */\nexport const fatal = function(...var_args: string[]) {\n  const message = buildLogMessage_(...var_args);\n  throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n\n/**\n * @param {...*} var_args\n */\nexport const warn = function(...var_args: any[]) {\n  if (typeof console !== 'undefined') {\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...var_args);\n    if (typeof console.warn !== 'undefined') {\n      console.warn(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\n/**\n * @param {!String} methodName\n */\nexport const warnAboutUnsupportedMethod = function(methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexport const isInvalidJSONNumber = function(data: any): boolean {\n  return (\n    typeof data === 'number' &&\n    (data != data || // NaN\n      data == Number.POSITIVE_INFINITY ||\n      data == Number.NEGATIVE_INFINITY)\n  );\n};\n\n/**\n * @param {function()} fn\n */\nexport const executeWhenDOMReady = function(fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    let wrappedFn = function() {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n    } else if ((document as any).attachEvent) {\n      // IE.\n      (document as any).attachEvent('onreadystatechange', function() {\n        if (document.readyState === 'complete') wrappedFn();\n      });\n      // fallback to onload.\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexport const nameCompare = function(a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexport const stringCompare = function(a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexport const requireKey = function(\n  key: string,\n  obj: { [k: string]: any }\n): any {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\n/**\n * @param {*} obj\n * @return {string}\n */\nexport const ObjectToUniqueKey = function(obj: any): string {\n  if (typeof obj !== 'object' || obj === null) return stringify(obj);\n\n  const keys = [];\n  for (let k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) key += ',';\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function(\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexport const each = function(\n  obj: Object | Array<any>,\n  fn: (v?: any, k?: any) => void\n) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; ++i) {\n      fn(i, obj[i]);\n    }\n  } else {\n    /**\n     * in the conversion of code we removed the goog.object.forEach\n     * function which did a value,key callback. We standardized on\n     * a single impl that does a key, value callback. So we invert\n     * to not have to touch the `each` code points\n     */\n    forEach(obj, (key: any, val: any) => fn(val, key));\n  }\n};\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexport const bindCallback = function(\n  callback: (a: any) => void,\n  context?: object | null\n): Function {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexport const doubleToIEEE754String = function(v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  let bias = (1 << (ebits - 1)) - 1,\n    s,\n    e,\n    f,\n    ln,\n    i,\n    bits,\n    str;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) hexByte = '0' + hexByte;\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexport const isChromeExtensionContentScript = function(): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexport const isWindowsStoreApp = function(): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexport const errorForServerCode = function(code: string, query: Query): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code == 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code == 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query.path.toString() + ': ' + reason\n  );\n  (error as any).code = code.toUpperCase();\n  return error;\n};\n\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexport const tryParseInt = function(str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexport const exceptionGuard = function(fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function() {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function(\n  callback?: Function | null,\n  ...var_args: any[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(function() {\n      callback(...var_args);\n    });\n  }\n};\n\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function(): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexport const exportPropGetter = function(\n  object: Object,\n  name: string,\n  fnGet: () => any\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function(\n  fn: Function,\n  time: number\n): number | Object {\n  const timeout: number | Object = setTimeout(fn, time);\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n"]},"metadata":{},"sourceType":"script"}