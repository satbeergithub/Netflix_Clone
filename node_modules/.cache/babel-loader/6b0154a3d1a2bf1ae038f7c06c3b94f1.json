{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar util_1 = require(\"@firebase/util\");\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nvar StatsListener = /** @class */function () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n    var delta = util_1.clone(newStats);\n    if (this.last_) {\n      util_1.forEach(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n    return delta;\n  };\n  return StatsListener;\n}();\nexports.StatsListener = StatsListener;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAgBA;AAGA;;;;;;AAMA;EAGE,uBAAoBA,WAA4B;IAA5B,gBAAW,GAAXA,WAAW;IAFvB,UAAK,GAAmC,IAAI;EAED;EAEnDC,2BAAG,GAAH;IACE,IAAMC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACG,GAAG,EAAE;IAEvC,IAAMC,KAAK,GAAoBC,YAAK,CAACH,QAAQ,CAAC;IAC9C,IAAI,IAAI,CAACI,KAAK,EAAE;MACdD,cAAO,CAAC,IAAI,CAACC,KAAK,EAAE,UAACC,IAAY,EAAEC,KAAa;QAC9CJ,KAAK,CAACG,IAAI,CAAC,GAAGH,KAAK,CAACG,IAAI,CAAC,GAAGC,KAAK;MACnC,CAAC,CAAC;IACJ;IACA,IAAI,CAACF,KAAK,GAAGJ,QAAQ;IAErB,OAAOE,KAAK;EACd,CAAC;EACH,oBAAC;AAAD,CAlBA,EAkBC;AAlBYK","names":["collection_","StatsListener","newStats","get","delta","util_1","last_","stat","value","exports"],"sources":["../src/core/stats/StatsListener.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { clone, forEach } from '@firebase/util';\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta: typeof newStats = clone(newStats);\n    if (this.last_) {\n      forEach(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}