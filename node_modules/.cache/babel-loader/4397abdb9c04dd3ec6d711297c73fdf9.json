{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar util_1 = require(\"@firebase/util\");\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nvar DataEvent = /** @class */function () {\n  /**\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n   * @param {!DataSnapshot} snapshot The data backing the event\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\n   * @inheritDoc\n   */\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\n   * @inheritDoc\n   */\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\n   * @inheritDoc\n   */\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + util_1.stringify(this.snapshot.exportVal());\n  };\n  return DataEvent;\n}();\nexports.DataEvent = DataEvent;\nvar CancelEvent = /** @class */function () {\n  /**\n   * @param {EventRegistration} eventRegistration\n   * @param {Error} error\n   * @param {!Path} path\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\n   * @inheritDoc\n   */\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\n   * @inheritDoc\n   */\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\n   * @inheritDoc\n   */\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\n   * @inheritDoc\n   */\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n  return CancelEvent;\n}();\nexports.CancelEvent = CancelEvent;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAgBA;AA+BA;;;;AAIA;EACE;;;;;;EAMA,mBACSA,SAKa,EACbC,iBAAoC,EACpCC,QAAsB,EACtBC,QAAwB;IARxB,cAAS,GAATH,SAAS;IAMT,sBAAiB,GAAjBC,iBAAiB;IACjB,aAAQ,GAARC,QAAQ;IACR,aAAQ,GAARC,QAAQ;EACd;EAEH;;;EAGAC,2BAAO,GAAP;IACE,IAAMC,GAAG,GAAG,IAAI,CAACH,QAAQ,CAACI,MAAM,EAAE;IAClC,IAAI,IAAI,CAACN,SAAS,KAAK,OAAO,EAAE;MAC9B,OAAOK,GAAG,CAACE,IAAI;IACjB,CAAC,MAAM;MACL,OAAOF,GAAG,CAACG,SAAS,EAAE,CAACD,IAAI;IAC7B;EACF,CAAC;EAED;;;EAGAH,gCAAY,GAAZ;IACE,OAAO,IAAI,CAACJ,SAAS;EACvB,CAAC;EAED;;;EAGAI,kCAAc,GAAd;IACE,OAAO,IAAI,CAACH,iBAAiB,CAACQ,cAAc,CAAC,IAAI,CAAC;EACpD,CAAC;EAED;;;EAGAL,4BAAQ,GAAR;IACE,OACE,IAAI,CAACM,OAAO,EAAE,CAACC,QAAQ,EAAE,GACzB,GAAG,GACH,IAAI,CAACX,SAAS,GACd,GAAG,GACHY,gBAAS,CAAC,IAAI,CAACV,QAAQ,CAACW,SAAS,EAAE,CAAC;EAExC,CAAC;EACH,gBAAC;AAAD,CAzDA,EAyDC;AAzDYC;AA2Db;EACE;;;;;EAKA,qBACSb,iBAAoC,EACpCc,KAAY,EACZR,IAAU;IAFV,sBAAiB,GAAjBN,iBAAiB;IACjB,UAAK,GAALc,KAAK;IACL,SAAI,GAAJR,IAAI;EACV;EAEH;;;EAGAS,6BAAO,GAAP;IACE,OAAO,IAAI,CAACT,IAAI;EAClB,CAAC;EAED;;;EAGAS,kCAAY,GAAZ;IACE,OAAO,QAAQ;EACjB,CAAC;EAED;;;EAGAA,oCAAc,GAAd;IACE,OAAO,IAAI,CAACf,iBAAiB,CAACQ,cAAc,CAAC,IAAI,CAAC;EACpD,CAAC;EAED;;;EAGAO,8BAAQ,GAAR;IACE,OAAO,IAAI,CAACT,IAAI,CAACI,QAAQ,EAAE,GAAG,SAAS;EACzC,CAAC;EACH,kBAAC;AAAD,CAvCA,EAuCC;AAvCYG","names":["eventType","eventRegistration","snapshot","prevName","DataEvent","ref","getRef","path","getParent","getEventRunner","getPath","toString","util_1","exportVal","exports","error","CancelEvent"],"sources":["../src/core/view/Event.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\nimport { Path } from '../util/Path';\nimport { EventRegistration } from './EventRegistration';\nimport { DataSnapshot } from '../../api/DataSnapshot';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  /**\n   * @return {!Path}\n   */\n  getPath(): Path;\n\n  /**\n   * @return {!string}\n   */\n  getEventType(): string;\n\n  /**\n   * @return {!function()}\n   */\n  getEventRunner(): () => void;\n\n  /**\n   * @return {!string}\n   */\n  toString(): string;\n}\n\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nexport class DataEvent implements Event {\n  /**\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n   * @param {!DataSnapshot} snapshot The data backing the event\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType:\n      | 'value'\n      | ' child_added'\n      | ' child_changed'\n      | ' child_moved'\n      | ' child_removed',\n    public eventRegistration: EventRegistration,\n    public snapshot: DataSnapshot,\n    public prevName?: string | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    const ref = this.snapshot.getRef();\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return this.eventType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  /**\n   * @param {EventRegistration} eventRegistration\n   * @param {Error} error\n   * @param {!Path} path\n   */\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    return this.path;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return 'cancel';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n"]},"metadata":{},"sourceType":"script"}