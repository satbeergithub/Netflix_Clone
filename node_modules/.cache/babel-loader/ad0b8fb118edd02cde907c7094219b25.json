{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Operation_1 = require(\"./Operation\");\nvar Path_1 = require(\"../util/Path\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nvar Overwrite = /** @class */function () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n    this.type = Operation_1.OperationType.OVERWRITE;\n  }\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path_1.Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n  return Overwrite;\n}();\nexports.Overwrite = Overwrite;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAgBA;AACA;AAGA;;;;;;;AAOA;EAIE,mBACSA,MAAuB,EACvBC,IAAU,EACVC,IAAU;IAFV,WAAM,GAANF,MAAM;IACN,SAAI,GAAJC,IAAI;IACJ,SAAI,GAAJC,IAAI;IANb;IACA,SAAI,GAAGC,yBAAa,CAACC,SAAS;EAM3B;EAEHC,qCAAiB,GAAjB,UAAkBC,SAAiB;IACjC,IAAI,IAAI,CAACL,IAAI,CAACM,OAAO,EAAE,EAAE;MACvB,OAAO,IAAIF,SAAS,CAClB,IAAI,CAACL,MAAM,EACXQ,WAAI,CAACC,KAAK,EACV,IAAI,CAACP,IAAI,CAACQ,iBAAiB,CAACJ,SAAS,CAAC,CACvC;IACH,CAAC,MAAM;MACL,OAAO,IAAID,SAAS,CAAC,IAAI,CAACL,MAAM,EAAE,IAAI,CAACC,IAAI,CAACU,QAAQ,EAAE,EAAE,IAAI,CAACT,IAAI,CAAC;IACpE;EACF,CAAC;EACH,gBAAC;AAAD,CArBA,EAqBC;AArBYU","names":["source","path","snap","Operation_1","OVERWRITE","Overwrite","childName","isEmpty","Path_1","Empty","getImmediateChild","popFront","exports"],"sources":["../src/core/operation/Overwrite.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Path } from '../util/Path';\nimport { Node } from '../snap/Node';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (this.path.isEmpty()) {\n      return new Overwrite(\n        this.source,\n        Path.Empty,\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}