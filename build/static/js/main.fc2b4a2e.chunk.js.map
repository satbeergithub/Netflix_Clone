{"version":3,"sources":["store/userslice.js","firebase.js","component/Login/SignupScreen.js","component/Login/Login.js","component/tmdbfile/request.js","component/homescreen/Banner.js","component/homescreen/Navbar.js","component/homescreen/Row.js","component/homescreen/Homescreen.js","App.js","index.js","component/Images/Netflix_logo_PNG1.png","component/Images/smily.png"],"names":["userslice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectuser","store","configureStore","reducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","auth","SignupScreen","useState","signup","setsignup","loading","setloading","emailref","useRef","passwordref","className","type","placeholder","ref","onClick","e","preventDefault","enteredemail","current","value","enteredpassword","createUserWithEmailAndPassword","then","userCredential","console","log","catch","error","message","signInWithEmailAndPassword","prevState","Login","loginpage","setloginpage","src","logo","alt","onSubmit","API_KEY","userrequest","fetchTrending","fetchMTOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","i","Banner","movie","setmovie","useEffect","axios","get","res","random","Math","floor","data","results","length","fetchdata","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","original_title","overview","Navbar","smily","Row","title","isLargeRow","fetchurl","movies","trailerUrl","setTrailerUrl","handleClick","id","trailerurl","key","map","poster_path","videoId","opts","height","width","playerVars","autoplay","Homescreen","App","useSelector","dispatch","useDispatch","onAuthStateChanged","uid","email","ReactDOM","createRoot","document","getElementById","render","module","exports"],"mappings":"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","file":"static/js/main.fc2b4a2e.chunk.js","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userslice = createSlice({\r\n    name:'user',\r\n    initialState:{\r\n        user:null,\r\n    },\r\n    reducers:{\r\n        login: (state,action)=>{\r\n            state.user = action.payload;\r\n        },\r\n        logout:(state)=>{\r\n            state.user=null\r\n        },\r\n    }\r\n})\r\n\r\nexport const{login,logout}=userslice.actions\r\nexport const selectuser = (state)=> state.user;\r\n\r\nconst store = configureStore({\r\n    reducer: userslice.reducer\r\n});\r\n\r\nexport default store;","import firebase from \"firebase\";\r\nimport { initializeApp } from \"firebase/app\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD3GgBOjaVGy8exAIZJZtH5C9Tg4HURz_o\",\r\n  authDomain: \"netflix-clone-fbe76.firebaseapp.com\",\r\n  projectId: \"netflix-clone-fbe76\",\r\n  storageBucket: \"netflix-clone-fbe76.appspot.com\",\r\n  messagingSenderId: \"1074561489337\",\r\n  appId: \"1:1074561489337:web:6e53c3be2e149bbc82be68\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = firebase.auth();\r\nexport default auth;","import React, { useRef, useState } from \"react\";\r\nimport \"./SignupScreen.css\";\r\nimport firebase from \"firebase\";\r\nimport auth from \"../../firebase\";\r\n\r\nfunction SignupScreen() {\r\n  const [signup, setsignup] = useState(true);\r\n  const [loading ,setloading] = useState(false)\r\n  const emailref = useRef(null);\r\n  const passwordref = useRef(null);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setsignup((prevState) => !prevState);\r\n  };\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    const enteredemail = emailref.current.value;\r\n    const enteredpassword = passwordref.current.value;\r\n    setloading(true)\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(enteredemail, enteredpassword)\r\n      .then((userCredential) => {\r\n        console.log(userCredential);\r\n          setloading(false)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\nconst signinhandler=(e)=>{\r\n  e.preventDefault();\r\n  const enteredemail = emailref.current.value;\r\n    const enteredpassword = passwordref.current.value;\r\n    setloading(true)\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      enteredemail,\r\n      enteredpassword\r\n      )\r\n    .then((userCredential) => {\r\n      // Signed in\r\n      console.log(userCredential);\r\n      setloading(false)\r\n      // ...\r\n    })\r\n    .catch((error) => {\r\n     console.log(error.message) \r\n    });\r\n}\r\n  return (\r\n    <div className=\"SignupScreen\">\r\n      <form>\r\n        <h1>{signup ? \"Sign up\" : \"Login In\"}</h1>\r\n        <input type=\"text\" placeholder=\"Enter Your Email\" ref={emailref} />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Your Password\"\r\n          ref={passwordref}\r\n        />\r\n        {loading && <p>Loading a content....</p>}\r\n     {!loading && signup && <button onClick={register}>Sign Up</button>}  \r\n        {!loading &&!signup && <button onClick={signinhandler}>Login in</button>}\r\n        <h2>\r\n          <span onClick={switchAuthModeHandler}>\r\n            {!signup ? \"Sign up\" : \"Login In\"}\r\n          </span>\r\n        </h2>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupScreen;\r\n\r\n\r\n\r\n\r\n{/* <form>\r\n        <h1>{signup ? \"Sign up\" : \"Login In\"}</h1>\r\n        <input type=\"text\" placeholder=\"Enter Your Email\" ref={emailref} />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Your Password\"\r\n          ref={passwordref}\r\n        />\r\n        <button onClick={register}>{signup ? \"Sign Up\" : \"Login In\"}</button>\r\n        <h2>\r\n          <span onClick={switchAuthModeHandler}>\r\n            {!signup ? \"Sign up\" : \"Login In\"}\r\n          </span>\r\n        </h2>\r\n      </form> */}","import React, { useState } from \"react\";\r\nimport './Login.css'\r\nimport logo from \"../Images/Netflix_logo_PNG1.png\";\r\nimport SignupScreen from \"./SignupScreen\";\r\n\r\nfunction Login() {\r\n \r\nconst[loginpage,setloginpage]=useState(false)\r\n\r\nconst loginhandler= (e)=>{\r\n  e.preventDefault()\r\n  setloginpage(true)\r\n}\r\n\r\n\r\n\r\n  return (\r\n\r\n  <div className=\"login\">\r\n      <div className=\"login_header\">\r\n        <img src={logo} alt=\"li\" />\r\n        <button >SIGN IN</button>\r\n      </div>\r\n\r\n     {loginpage ?(<SignupScreen/>):(\r\n      <>\r\n      <div className=\"login_body\">\r\n        <h1>Watch Unlimited Movies,TV Shows & More</h1>\r\n        <h2>Watch Your Movie & Enjoy</h2>\r\n        <h3>Lets start to Watch! but You need to login</h3>\r\n           <form className=\"login_form\" onSubmit={loginhandler}>\r\n            <input type=\"text\" placeholder=\"Enter your Email Address\" />\r\n            <button>Get started</button>\r\n           </form>\r\n      </div>\r\n      </>\r\n     )}\r\n      \r\n   \r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nexport default Login;\r\n","const API_KEY ='32ce6adcd8f4737faa4cf686afa6b000'\r\nconst userrequest = {\r\n     fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchMTOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default userrequest;","// import axios from '../tmdbfile/axios'\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Banner.css'\r\nimport userrequest from '../tmdbfile/request';\r\n\r\nfunction Banner() {\r\n  const [movie,setmovie]=useState([]);\r\n\r\nuseEffect(()=>{\r\n\r\n  async function fetchdata(){\r\n    try{\r\n      const res = await axios.get('https://api.themoviedb.org/3/discover/tv?api_key=32ce6adcd8f4737faa4cf686afa6b000&language=en-US')\r\n      const random = Math.floor(Math.random()*res.data.results.length)-1\r\n      console.log(res.data.results[random]);\r\n      setmovie(res.data.results[random])\r\n    } catch(error){\r\n      console.log(error)\r\n    }  \r\n  }\r\n  fetchdata();\r\n},[])\r\n  \r\n  return (\r\n    <div className='banner'  style={{\r\n        backgroundImage:`url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`,backgroundPosition:'center',backgroundSize:'cover'\r\n    }}>\r\n         <div className=\"banner_content\">\r\n            <h1>{movie.original_title || movie.name}</h1>\r\n            <div className='btn'>\r\n            <button >Play</button>\r\n            <button>My List</button>\r\n            </div>\r\n            \r\n            <div className=\"description\">\r\n                <p >{movie.overview}</p>\r\n            </div>\r\n         </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner;","import React from 'react'\r\nimport './Navbar.css'\r\nimport logo from '../Images/Netflix_logo_PNG1.png'\r\nimport smily from '../Images/smily.png'\r\nfunction Navbar() {\r\n  return (\r\n      <div className='navbar'>\r\n             <div className='navbar_content'>\r\n                <img src={logo} alt=\"li\" />\r\n                <img src={smily} alt=\"si\" />\r\n             </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport './Row.css'\r\n// import axios from '../tmdbfile/localaxios'\r\nimport axios from 'axios'\r\nimport YouTube from 'react-youtube'\r\n\r\nfunction Row({title,isLargeRow,fetchurl}) {\r\n\r\n  const [movies,setmovie]=useState([])\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const image_url ='https://image.tmdb.org/t/p/original/'\r\n    // Options for react-youtube\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"100%\",\r\n      playerVars: {\r\n        autoplay: 1,\r\n      },\r\n    };\r\n  \r\nuseEffect(()=>{\r\n  async function fetchdata(){\r\n    try{\r\n      const res = await axios.get(`https://api.themoviedb.org/3${fetchurl}`)\r\n      console.log(res.data.results);\r\n      setmovie(res.data.results)\r\n    } catch(error){\r\n      console.log(error)\r\n    }  \r\n  }\r\n  fetchdata();\r\n},[fetchurl])\r\n\r\nconst handleClick = async (movie) => {\r\n  if (trailerUrl) {\r\n    setTrailerUrl(\"\");\r\n  } else {\r\n    let trailerurl = await axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=32ce6adcd8f4737faa4cf686afa6b000`);\r\n    setTrailerUrl(trailerurl.data.results[0]?.key);\r\n  }\r\n};\r\n \r\n  return (\r\n    <div className='row'>\r\n      <h1>{title}</h1>\r\n      \r\n      <div className=\"row_posters\">\r\n        {\r\n          movies.map(movie=>{\r\n            return <img src={`${image_url}${movie.poster_path}`} className={`ri ${isLargeRow && 'large-image'}`}\r\n            alt={movie.name}\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)} />\r\n          })\r\n        }\r\n       \r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row\r\n\r\n\r\n// // https://image.tmdb.org/t/p/original/\r\n// poster_path\r\n// useEffect(()=>{\r\n//   async function fetchdata(){\r\n//     try{\r\n//       const res = await axios.get('https://api.themoviedb.org/3/trending/all/week?api_key=32ce6adcd8f4737faa4cf686afa6b000&language=en-US')\r\n//       console.log(res.data.results);\r\n//       let d=res.data.results\r\n//       setmovie(res.data.results)\r\n//     } catch(error){\r\n//       console.log(error)\r\n//     }  \r\n//   }\r\n//   fetchdata();\r\n// },[])","import React from 'react'\r\nimport Banner from './Banner';\r\nimport './Homescreen.css'\r\nimport Navbar from './Navbar';\r\nimport Row from './Row'\r\nimport userrequest from '../tmdbfile/request';\r\nfunction Homescreen() {\r\n  return (\r\n    <>\r\n     <div className='homescreen'>\r\n         <Navbar/>\r\n         <Banner/>\r\n        <Row title='Trending Now' isLargeRow fetchurl={userrequest.fetchTrending }/>\r\n        <Row title='Top Rated Movie' fetchurl={userrequest.fetchTopRated}/>\r\n        <Row title='Comedy Movie'  fetchurl={userrequest.fetchComedyMovies}/>\r\n        <Row title='Horror Movie' fetchurl={userrequest.fetchHorrorMovies}/>\r\n        <Row title='Action Movie' fetchurl={userrequest.fetchActionMovies}/>\r\n        <Row title='Romance Movie' fetchurl={userrequest.fetchRomanceMovies}/>\r\n        \r\n\r\n      </div>\r\n    </>\r\n   \r\n  )\r\n}\r\n\r\nexport default Homescreen;"," import React, { useEffect } from 'react';\n import {  useDispatch, useSelector } from 'react-redux';\nimport Login from './component/Login/Login';\nimport { login, logout, selectuser } from './store/userslice';\nimport Homescreen from './component/homescreen/Homescreen';\nimport firebase from \"firebase\";\n\nconst App = ()=>{\n\n  const user=useSelector(selectuser)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    firebase.auth().onAuthStateChanged((user) =>{\n      if (user) {\n        // User is signed in.\n        dispatch(login ({\n          uid:user.id,\n          email:user.email\n        }))\n      }\n      else{\n          dispatch(logout)\n      }\n    })\n  \n  },[])\n  \n  return(\n \n   <div>\n      {\n        !user ?   (<Login/>) :\n        <Homescreen/>\n      }\n     \n    </div>\n \n \n  ) \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport store from './store/userslice';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n\n);\n","module.exports = __webpack_public_path__ + \"static/media/Netflix_logo_PNG1.05c96bba.png\";","module.exports = __webpack_public_path__ + \"static/media/smily.29ad315f.png\";"],"sourceRoot":""}